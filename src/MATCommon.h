
#ifndef MatrixBuddy_MATCommon_h
#define MatrixBuddy_MATCommon_h


#import <Cocoa/Cocoa.h>
#include "NAVectorAlgebra.h"

#define MAT_TEXTFIELD_WIDTH 65
#define MAT_TEXTFIELD_HEIGHT 22
#define MAT_TEXTFIELD_SPACE_H 5
#define MAT_TEXTFIELD_SPACE_V 5
#define MAT_VALUE_BORDER 5
#define MAT_LABEL_HEIGHT 32
#define MAT_ERRORTEXT_HEIGHT 17
#define MAT_TOP_SURROUNDING_SPACE_H 10
#define MAT_BOTTOM_SURROUNDING_SPACE_H (10 + MAT_LABEL_HEIGHT - MAT_TEXTFIELD_HEIGHT)

#define MAT_VIEW_SURROUNDING_ELEMENTS_HEIGHT (MAT_LABEL_HEIGHT + MAT_TEXTFIELD_HEIGHT + MAT_TOP_SURROUNDING_SPACE_H + MAT_BOTTOM_SURROUNDING_SPACE_H)

#define MAT_VIEW_WIDTH_1  (1 * MAT_TEXTFIELD_WIDTH  + 0 * MAT_TEXTFIELD_SPACE_H + 2 * MAT_VALUE_BORDER)
#define MAT_VIEW_WIDTH_2  (2 * MAT_TEXTFIELD_WIDTH  + 1 * MAT_TEXTFIELD_SPACE_H + 2 * MAT_VALUE_BORDER)
#define MAT_VIEW_WIDTH_3  (3 * MAT_TEXTFIELD_WIDTH  + 2 * MAT_TEXTFIELD_SPACE_H + 2 * MAT_VALUE_BORDER)
#define MAT_VIEW_WIDTH_4  (4 * MAT_TEXTFIELD_WIDTH  + 3 * MAT_TEXTFIELD_SPACE_H + 2 * MAT_VALUE_BORDER)
#define MAT_VIEW_HEIGHT_1 (1 * MAT_TEXTFIELD_HEIGHT + 0 * MAT_TEXTFIELD_SPACE_V + MAT_VIEW_SURROUNDING_ELEMENTS_HEIGHT + 2 * MAT_VALUE_BORDER)
#define MAT_VIEW_HEIGHT_2 (2 * MAT_TEXTFIELD_HEIGHT + 1 * MAT_TEXTFIELD_SPACE_V + MAT_VIEW_SURROUNDING_ELEMENTS_HEIGHT + 2 * MAT_VALUE_BORDER)
#define MAT_VIEW_HEIGHT_3 (3 * MAT_TEXTFIELD_HEIGHT + 2 * MAT_TEXTFIELD_SPACE_V + MAT_VIEW_SURROUNDING_ELEMENTS_HEIGHT + 2 * MAT_VALUE_BORDER)
#define MAT_VIEW_HEIGHT_4 (4 * MAT_TEXTFIELD_HEIGHT + 3 * MAT_TEXTFIELD_SPACE_V + MAT_VIEW_SURROUNDING_ELEMENTS_HEIGHT + 2 * MAT_VALUE_BORDER)

#include "MATTextField.h"


typedef enum{
  MAT_STATUS_RESULT,
  MAT_STATUS_NORMAL,
  MAT_STATUS_MATRIX_DETERMINANT_ZERO,
  MAT_STATUS_MATRIX_DETERMINANT_ALMOST_ZERO,
  MAT_STATUS_VECTOR_COMPONENT_ZERO,
  MAT_STATUS_VECTOR_COMPONENT_ALMOST_ZERO,
  MAT_STATUS_MATRIX_COMPONENT_ZERO,
  MAT_STATUS_MATRIX_COMPONENT_ALMOST_ZERO,
  MAT_STATUS_SCALAR_ZERO,
  MAT_STATUS_SCALAR_ALMOST_ZERO,
  MAT_STATUS_VECTOR_LENGTH_ZERO,
  MAT_STATUS_VECTOR_LENGTH_ALMOST_ZERO,
  MAT_STATUS_VECTORS_COLINEAR,
  MAT_STATUS_VECTORS_ALMOST_COLINEAR,
  MAT_STATUS_VECTOR_LENGTH_UNEQUAL_ONE,
} MATStatus;


typedef enum{
  MAT_COLOR_NORMAL,
  MAT_COLOR_RESULT,
  MAT_COLOR_ERROR,
  MAT_COLOR_WARNING,
}MATColor;


typedef enum{
  MAT_CODE_STYLE_NONE = 0,
  MAT_CODE_STYLE_C_ROW_FIRST_1D,
  MAT_CODE_STYLE_C_ROW_FIRST_2D,
  MAT_CODE_STYLE_C_COLUMN_FIRST_1D,
  MAT_CODE_STYLE_C_COLUMN_FIRST_2D,
  MAT_CODE_STYLE_MATHEMATICA,
  MAT_CODE_STYLE_MATLAB,
  MAT_CODE_STYLE_MAPLE,
} MATCodeStyle;


typedef enum{
  MAT_DIMENSIONS_2 = 0,
  MAT_DIMENSIONS_3,
  MAT_DIMENSIONS_4,
} MATDimensions;


typedef enum{
  MAT_COMPUTATION_VMULS,
  MAT_COMPUTATION_VDIVS,
  MAT_COMPUTATION_VMULCOMPV,
  MAT_COMPUTATION_VDIVCOMPV,

  MAT_COMPUTATION_NEGV,
  MAT_COMPUTATION_VADDV,
  MAT_COMPUTATION_VSUBV,
  MAT_COMPUTATION_VDOTV,
  MAT_COMPUTATION_VCROSSV,
  MAT_COMPUTATION_LENGTHV,

  MAT_COMPUTATION_NORMALIZEV,
  MAT_COMPUTATION_ORTHOGONALIZEV,
  MAT_COMPUTATION_MIRRORV,

  MAT_COMPUTATION_MMULS,
  MAT_COMPUTATION_MDIVS,
  MAT_COMPUTATION_MMULCOMPV,
  MAT_COMPUTATION_MDIVCOMPV,
  MAT_COMPUTATION_MMULCOMPM,
  MAT_COMPUTATION_MDIVCOMPM,
  
  MAT_COMPUTATION_NEGM,
  MAT_COMPUTATION_MADDM,
  MAT_COMPUTATION_MSUBM,
  MAT_COMPUTATION_MMULV,
  MAT_COMPUTATION_MMULM,

  MAT_COMPUTATION_DIAGS,
  MAT_COMPUTATION_DIAGV,
  MAT_COMPUTATION_TRANSPOSEM,
  MAT_COMPUTATION_INVERTM,
  
  MAT_COMPUTATION_COUNT
} MATComputation;


#endif
