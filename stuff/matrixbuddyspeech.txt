This is Matrix Buddy, your everyday helper for basic linear algebra. Version 1.

You can download it in the Mac App Store. Please leave a nice rating and comment if you like it.

Basically, in Matrix Buddy, you can compute the most important vector and matrix operations, all in one window. You can select any of the operations indicated in the top section of the window by simply clicking the buttons. For example a cross product or a matrix subtraction.

Matrix Buddy allows you to choose between 2D, 3D and 4D computation. *Switch v+v* Vectors then have 2, 3 or 4 elements and matrices *Switch M+M* have 2x2, 3x3 or 4x4 elements respectively.

When you enter values in the textfields below, the operation is performed immediately after you press enter. Alternatively, you can use the tab key to advance to the next textfield.

For example, we can multiply a matrix with a scalar as simple as that. Or we can compute the length of a 2D vector. Or we can multiply a 3x3 matrix with a 3D vector.

Now this last operation is probably the one operation you will be using the most. Or more precise: The inversion of that operation. You are interested in solving the linear equation system defined by A and x. Matrix buddy lets you do that by simply editing the x vector instead of the b vector. See how the b vector suddenly turned green? This indicates that Matrix Buddy is now secretly computing the inverse of A and multiplying it with x such that b is the result we tried to solve this equation for.

If A is by accident not invertible, Matrix buddy will tell us. But let's make a quick example for a 4D equation system. We try to find the coefficients of a cubic polynom, whereas we have information about the value and gradient at coordinates 0 and 1, an everyday problem when working with splines. We fill in the 4x4 matrix with the position at 0, the position at 1, the gradient at 0 and the gradient at 1. And as a result, we define the resulting points to be at position 0 and 1 and having both a gradient of 0. Immediately, we get the coefficients for the cubic curve.

As you might have seen, by default, when using the tab key, matrix elements are selected in a row-first ordering. By clicking on the cogwheel button in the middle on the top, a settings menu is revealed. Here, you can choose whether you want to advance through a matrix in row-first order or in column first order by simply selecting the desired option.

In this settings menu, you can also set other settings like if you would like to have a quick line of helping text or the Identifiers on top of the textfields.

The textfields on the very bottom of the window are the code fields. Here, the vector or matrix stored above is encoded in a string which you can simply copy and paste to other code fields or even external applications.

By copying the code, you can store for example a 4x4 matrix in a TextEdit file for later use. Or you can paste an already stored matrix back into Matrix Buddy.

The code style of the code text field can be chosen in the settings menu. You can choose to not display the code text field, or to have one of these code styles. There are four options for programming style in the C-syntax as well as code styles for Mathematica, Matlab and Maple which allows you to directly paste such codes in these applications.

Please refer to the built in help of Matrix Buddy for a detailed look on how these encodings look and perform.

Last but not least let's go quickly through all of the operations.



That's all there is to in Version 1 of Matrix Buddy. Again, please leave a nice comment in the App Store if you like it and send my any requests or bugs directly by email which you can find on the webpage in the about window.

Thank you for watching.